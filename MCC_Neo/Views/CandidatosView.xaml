<UserControl x:Class="MCC_Neo.Views.CandidatosView" Name="CandidatosVw"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:MCC_Neo.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1125">
    <UserControl.Resources>
        <Style x:Key="verticalCenterAlignedColumn" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="horizontalCenterAlignedColumn" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <!--<local:CadastroCandidatoView x:Key="vwCandidato" x:Name="vwCandidato" />-->
    </UserControl.Resources>
    <Grid>
        <Grid>
            <!--DataContext="{Binding ElementName=CandidatosVw,Path=DataContext}"-->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="20"/>
                <RowDefinition Height="200*"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" MinWidth="200"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="400*" MinWidth="300"/>
            </Grid.ColumnDefinitions>

            <Rectangle Grid.Row="0" Grid.Column="0" Fill="{StaticResource azureItemBackground}" 
                       VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="2,3,2,0"/>
            <TextBlock Grid.Row="0" Grid.Column="0" Text="Nossas cidades" Foreground="Orange"
                       FontWeight="Bold" FontSize="16" FontFamily="Verdana"
                       VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"/>
            <GridSplitter Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Stretch"/>
            <TextBox Grid.Row="0" Grid.Column="2" Margin="3" Text="{Binding NomeBusca, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     x:Name="NomePesquisa"
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     materialDesign:HintAssist.Hint="Digite o nome para pesquisar"/>

            <!--Cidade-->
            <ListBox ItemsSource="{Binding ListaCidades, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                     Grid.Row="1" Grid.RowSpan="2" Background="{StaticResource azureItemBackground}"
                     Margin="2,1,2,2" SelectedItem="{Binding CidadeSelecionada, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="13" Margin="-30,0,0,0" Grid.Column="0">
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Setter Property="Fill" Value="Transparent" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, 
                                                   RelativeSource={RelativeSource Mode=FindAncestor, 
                                                   AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                <Setter Property="Fill" Value="White" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsMouseOver, 
                                                   RelativeSource={RelativeSource Mode=FindAncestor, 
                                                   AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>

                            <TextBlock Grid.Row="0" Grid.Column="2" Margin="1,7" Text="{Binding NomeCidade}" FontSize="14"
                                       HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Medium" TextWrapping="Wrap">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, 
                                                   RelativeSource={RelativeSource Mode=FindAncestor, 
                                                   AncestorType={x:Type ListBoxItem}}}" Value="False">
                                                <Setter Property="Foreground" Value="LightGray" />
                                                <Setter Property="FontWeight" Value="SemiBold" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsSelected, 
                                                   RelativeSource={RelativeSource Mode=FindAncestor, 
                                                   AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource azureItemHighlightText}" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsMouseOver, 
                                                   RelativeSource={RelativeSource Mode=FindAncestor, 
                                                   AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                <Setter Property="Foreground" Value="White" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!--Candidatos-->
            <DataGrid Grid.Row="1" Grid.Column="2" ItemsSource="{Binding ListaCandidatos}" Margin="1" x:Name="gridCandidatos"
                          SelectedValue="{Binding CandidatoSelecionado}" 
                      IsReadOnly="True" AutoGenerateColumns="False" GridLinesVisibility="All" 
                      AlternatingRowBackground="#B7F2F2F2" VerticalGridLinesBrush="LightGray">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="140">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <WrapPanel Margin="3,-10">
                                    <Button Content="{materialDesign:PackIcon Kind=AccountPlus}" HorizontalAlignment="Center"
                                            ToolTip="Incluir novo candidato" x:Name="btnNovoCandidato" Click="BtnCandidato_Click"
                                            IsEnabled="{Binding ElementName=CandidatosVw,Path=DataContext.PermiteIncluir}"/>
                                    <Button Content="{materialDesign:PackIcon Kind=Delete}" Margin="3,3" 
                                            ToolTip="Excluir candidado selecionado" 
                                            Command="{Binding ElementName=CandidatosVw,Path=DataContext.CmdExcluirCandidato}"
                                            IsEnabled="{Binding ElementName=CandidatosVw,Path=DataContext.PermiteExcluir}"/>
                                </WrapPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="{materialDesign:PackIcon Kind=Eye}" x:Name="btnCandidato" 
                                        Click="BtnCandidato_Click" HorizontalAlignment="Center"
                                        ToolTip="Visualizar/alterar informações" 
                                        />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Nome" Binding="{Binding Nome}" Width="240" 
                                        ElementStyle="{StaticResource verticalCenterAlignedColumn}"/>
                    <DataGridTextColumn Header="Cidade" Binding="{Binding CandidatoCidade.NomeCidade}" Width="150" 
                                        Visibility="{Binding ElementName=CandidatosVw,Path=DataContext.VerCidadeGrid,
                                            Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                        ElementStyle="{StaticResource verticalCenterAlignedColumn}" />
                    <DataGridTextColumn Header="Telefone(s)" Binding="{Binding Telefones}" Width="150"
                                        ElementStyle="{StaticResource verticalCenterAlignedColumn}" />
                    <DataGridTextColumn Header="Dt.Nascto" Binding="{Binding DataNascimento, StringFormat=dd/MM/yyyy}" Width="100"
                                        ElementStyle="{StaticResource verticalCenterAlignedColumn}" />
                    <DataGridTextColumn Header="Nome crachá" Binding="{Binding NomeCracha}" 
                                        ElementStyle="{StaticResource horizontalCenterAlignedColumn}" />
                    <DataGridTextColumn Header="E-mail" Binding="{Binding Email}" 
                                        ElementStyle="{StaticResource verticalCenterAlignedColumn}" />
                    <DataGridTextColumn Header="Idade" Binding="{Binding Idade}" 
                                        ElementStyle="{StaticResource horizontalCenterAlignedColumn}" />
                    <DataGridTextColumn Header="Endereço" Binding="{Binding Endereco}" MinWidth="200" 
                                        ElementStyle="{StaticResource verticalCenterAlignedColumn}" />
                </DataGrid.Columns>
            </DataGrid>

            <!-- Total de candidatos -->
            <Rectangle Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Fill="#ff167ce0" Margin="3" />
            <WrapPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"  HorizontalAlignment="Right" Margin="5">
                <WrapPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                    </Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="FontSize" Value="24"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                    </Style>
                </WrapPanel.Resources>

                <TextBlock Text="Total:" Margin="5" FontSize="16" Foreground="White" FontWeight="SemiBold" />
                <TextBlock Text="{Binding ListaCandidatos.Count, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                           FontWeight="SemiBold" FontSize="16" Foreground="White" Margin="0,5,7,5" />
                <WrapPanel Margin="2,1,1,2" ToolTip="Total feminino">
                    <WrapPanel.Style>
                        <Style>
                            <Setter Property="Control.Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TotalFeminino,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="Control.Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding TotalMasculino,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="Control.Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Style>

                    <Label Content="{materialDesign:PackIcon Kind=HumanFemale}"
                           Margin="2,1,0,0" x:Name="lblIconFeminino"/>
                    <TextBlock Text="{Binding TotalFeminino,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" 
                               x:Name="txtTotFeminino" Margin="2,4,2,0" FontWeight="SemiBold"/>
                </WrapPanel>
                <WrapPanel Margin="2,1,4,2" ToolTip="Total masculino">
                    <WrapPanel.Style>
                        <Style>
                            <Setter Property="Control.Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TotalMasculino,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="Control.Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding TotalFeminino,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="Control.Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Style>

                    <Label Content="{materialDesign:PackIcon Kind=HumanMale}" 
                           Margin="{Binding ElementName=lblIconFeminino, Path=Margin}" />
                    <TextBlock Text="{Binding TotalMasculino,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" 
                               Margin="{Binding ElementName=txtTotFeminino, Path=Margin}"/>
                </WrapPanel>
            </WrapPanel>
        </Grid>
    </Grid>
</UserControl>
